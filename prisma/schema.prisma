// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id        String   @id @default(uuid())
  roleId    String?
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  roles roles? @relation(fields: [roleId], references: [id])

  driver drivers?
}

model roles {
  id        String   @id @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     users[]
}

model drivers {
  id             String   @id @default(uuid())
  userId         String   @unique
  name           String
  phone          String
  vehicle_number String
  vehicle_type   String
  isAssigned     Boolean  @default(false)
  isActive       Boolean  @default(false)
  orderAmounts   Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user     users      @relation(fields: [userId], references: [id])
  orders   orders[]
  tracking tracking[]
}

model orders {
  id          String    @id @default(uuid())
  packageId   String
  driverId    String
  status      String
  assignedAt  DateTime
  startedAt   DateTime?
  completedAt DateTime?
  proofImage  String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  drivers  drivers  @relation(fields: [driverId], references: [id])
  packages packages @relation(fields: [packageId], references: [id])
}

model packages {
  id                 String   @id @default(uuid())
  weight             Float
  price              Float
  status             String
  description        String?
  sender_name        String
  sender_phone       String
  sender_address     String
  sender_latitude    String?
  sender_longitude   String?
  receiver_name      String
  receiver_phone     String
  receiver_address   String
  receiver_latitude  String?
  receiver_longitude String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  orders   orders[]
  tracking tracking[]
}

model tracking {
  id        String   @id @default(uuid())
  packageId String
  driverId  String
  status    String
  latitude  String
  longitude String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  drivers  drivers  @relation(fields: [driverId], references: [id])
  packages packages @relation(fields: [packageId], references: [id])
}
